# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - quickshortapi

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  buildSonarQube:
    name: Build and analyze on SonarQube
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SPRING_DATA_MONGODB_URI: ${{ secrets.MONGODB_URI }}
          SPRING_DATA_REDIS_HOST: ${{ secrets.REDIS_HOST }}
          SPRING_DATA_REDIS_PORT: ${{ secrets.REDIS_PORT }}
          SPRING_DATA_REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          SPRING_KAFKA_BOOTSTRAP_SERVERS: ${{ secrets.KAFKA_BOOTSTRAP_SERVERS }}
          KAFKA_USERNAME: ${{ secrets.KAFKA_USERNAME }}
          KAFKA_PASSWORD: ${{ secrets.KAFKA_PASSWORD }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=quickshort -Dsonar.projectName='quickshort'

  build:
    runs-on: 'ubuntu-latest'
    needs: buildSonarQube

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn --batch-mode --update-snapshots package -DskipTests

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to registry
      uses: docker/login-action@v2
      with:
        registry: https://quickshortregistry.azurecr.io/
        username: ${{ secrets.AzureAppService_ContainerUsername_7b7f1f9646764d188bfab3dc6c7d7989 }}
        password: ${{ secrets.AzureAppService_ContainerPassword_25a8c812f2d94527874bf324504870eb }}

    - name: Build and push container image to registry
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: quickshortregistry.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_7b7f1f9646764d188bfab3dc6c7d7989 }}/quickshortapi:${{ github.sha }}
        file: ./Dockerfile
        build-args: |
          SPRING_DATA_MONGODB_URI=${{ secrets.MONGODB_URI }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'quickshortapi'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_8895fcb27e2a40e6a0ea93dba31b1602 }}
        images: 'quickshortregistry.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_7b7f1f9646764d188bfab3dc6c7d7989 }}/quickshortapi:${{ github.sha }}'


