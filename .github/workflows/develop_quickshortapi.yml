name: SonarQube Analysis

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SPRING_DATA_MONGODB_URI: ${{ secrets.MONGODB_URI }}
          SPRING_DATA_REDIS_HOST: ${{ secrets.REDIS_HOST }}
          SPRING_DATA_REDIS_PORT: ${{ secrets.REDIS_PORT }}
          SPRING_DATA_REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          SPRING_KAFKA_BOOTSTRAP_SERVERS: ${{ secrets.KAFKA_BOOTSTRAP_SERVERS }}
          SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username='${{ secrets.KAFKA_USERNAME }}' password='${{ secrets.KAFKA_PASSWORD }}';"
          SPRING_RABBITMQ_HOST: ${{ secrets.RABBITMQ_HOST }}
          SPRING_RABBITMQ_PORT: ${{ secrets.RABBITMQ_PORT }}
          SPRING_RABBITMQ_USERNAME: ${{ secrets.RABBITMQ_USERNAME }}
          SPRING_RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ_PASSWORD }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=quickshort -Dsonar.projectName='quickshort'
